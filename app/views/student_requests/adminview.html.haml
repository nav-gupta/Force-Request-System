- unless session[:uin].nil?
  = render 'layouts/login'
%h1 
  Admin Dashboard Page
= link_to '<button type="button" class="regularbutton">More Actions</button>'.html_safe, student_requests_adminprivileges_path
= form_tag student_requests_adminview_path, :method => :get do
  %h4
  .filter_form1
    %strong Filter Requests - State:
    %br
    %table
    - @all_states.each do |state|
      %tr
        %td= state
        %td= check_box_tag "state_sel[#{state}]", 'true', @state_selected[state]
    = submit_tag 'Refresh', class: "filter"
  .filter_form2
    %strong Filter Requests - Priority:
    %br
    %table
    - @all_priorities.each do |priority|
      %td= priority
      %td= check_box_tag "priority_sel[#{priority}]", 'true', @priority_selected[priority]
    = submit_tag 'Refresh', class: "filter"
- @allcourses.each do |course|
  %h4
    %input{:onclick => "return toggleMe('student_requests_#{course}')", :type => "button", :value => "Course Name #{course}", :class => "course_id_button"}
  %div{:id => "student_requests_#{course}"}
    = form_tag(student_requests_multiupdate_path(), method: "put") do
      %table#student_requests.sortableadmin
        %thead 
          %tr
            %th Select
            %th Id
            %th UIN
            %th Full Name
            %th Major
            %th Class
            %th Minor
            %th Section ID
            %th Expected Graduation
            %th Request Semester
            %th State
            %th Priority
            %th Creation date
            %th Email
      
        %tbody
          - @coursestudentlist[course].each do |record|
            %tr{:class => "#{cycle('oddrow', 'evenrow')}"}
              %td= check_box_tag "request_ids[]", record.request_id, false, data: { "mail" => "#{record.email}"}, "sub" => course 
              %td
                %a{:onclick => "return getDetailsById('#{record.request_id}')"} #{record.request_id}
              %td
                %a{:onclick => "return buttonclick(#{record.uin});"} #{record.uin}
              %td= record.full_name
              %td= record.major
              %td= record.classification
              %td= record.minor
              %td= record.section_id
              %td= record.expected_graduation
              %td= record.request_semester
              %td= record.state
              %td= record.priority
              %td= record.creation_date.strftime("%Y-%m-%d %H:%M:%S")
              %td= mail_to record.email, "email", subject: "Force Request System: Regarding course #{record.course_id}" 
            
          %table{ :class => "multiUpdate" }
            %tr
              %td= select_tag("multi_state_sel", options_for_select(@allAdminStates))
              %td= select_tag("multi_priority_sel", options_for_select(@allPriorityStates))
              %td= submit_tag "Update Selected"
              %td= link_to "Email Selected", "", :onclick => "multi_email(\"#{course}\"); return false"
            %tr{ :class => "excel_sheet"}
              %td= link_to "Download as Excel Sheet", student_requests_getSpreadsheet_path(format: "csv", :course_id => course)
%p= link_to "Download the entire Force Request System data as Excel Sheet", student_requests_getSpreadsheetAllCourses_path(format: "csv")
#myModal.modal
  %span.close{:onclick => "return spanclick()"} x
  .modal-content